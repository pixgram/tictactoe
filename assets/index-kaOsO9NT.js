var u=Object.defineProperty;var h=(l,t,e)=>t in l?u(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var n=(l,t,e)=>(h(l,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();class p{constructor(t,e){n(this,"domBoard");n(this,"game");this.domBoard=t,this.game=e}setCells(t){this.domBoard.innerHTML=`
    <table>
        <tr><td pos='0,0'></td><td pos='0,1'></td><td pos='0,2'></td></tr>
        <tr><td pos='1,0'></td><td pos='1,1'></td><td pos='1,2'></td></tr>
        <tr><td pos='2,0'></td><td pos='2,1'></td><td pos='2,2'></td></tr>
    </table>
    `,this.domBoard.querySelectorAll("td").forEach(r=>{const o=r.getAttribute("pos").split(","),i=parseInt(o[0]),d=parseInt(o[1]);r.innerHTML=t[i][d],r.addEventListener("click",()=>{this.game.clickBoard(i,d)})})}}class y{constructor(t,e){n(this,"domHistory");n(this,"game");n(this,"list",[]);this.domHistory=t,this.game=e}removeFromIndex(t){this.list.splice(t+1)}add(t){this.list.push(t),this.update()}update(){this.domHistory.innerHTML="",this.list.forEach((t,e)=>{const r=document.createElement("div"),s=t.title===""?`Go to move #${e}`:t.title;r.innerHTML=`
        <button index=${e}>${s}</button>
        `,this.domHistory.append(r),r.querySelector("button").addEventListener("click",o=>{var d;const i=(d=o==null?void 0:o.currentTarget)==null?void 0:d.getAttribute("index");if(i!==null){const c=parseInt(i),a=this.list[c];this.game.restore(a,c)}})})}}class m{constructor(t){n(this,"board");n(this,"bTurnX",!1);n(this,"history");n(this,"restoreHistoryIndex",-1);n(this,"cells",[["","",""],["","",""],["","",""]]);t.innerHTML=`
    <div class="app-left">
        <div class="next-player"></div>
        <div class="board"></div>
    </div>
    <div class="app-right">
        <div class="history"></div>
    </div>
    `;const e=document.querySelector(".board");e&&(this.board=new p(e,this),this.board.setCells(this.cells)),this.nextPlay();const r=document.querySelector(".history");r&&(this.history=new y(r,this),this.addCurrentStateIntoHistory("Go to game start"))}addCurrentStateIntoHistory(t=""){const e=structuredClone(this.cells);this.restoreHistoryIndex!==-1&&(this.history.removeFromIndex(this.restoreHistoryIndex),this.restoreHistoryIndex=-1),this.history.add({title:t,bTurnX:this.bTurnX,cells:e})}checkWinner(){const t=this.cells.flat(),e=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(let r=0;r<e.length;r++){const[s,o,i]=e[r];if(t[s]&&t[s]===t[o]&&t[s]===t[i])return t[s]}return null}clickBoard(t,e){var r;this.cells[t][e]===""&&(this.cells[t][e]=this.bTurnX?"X":"O",(r=this.board)==null||r.setCells(this.cells),this.nextPlay(),this.addCurrentStateIntoHistory())}setNextPlayerMessage(){const t=document.querySelector(".next-player");if(t){const e=this.checkWinner();e===null?t.innerHTML=`Next player: ${this.bTurnX?"X":"O"}`:t.innerHTML=`Winner: ${e}`}}nextPlay(){this.bTurnX=!this.bTurnX,this.setNextPlayerMessage()}restore(t,e){var s;const r=structuredClone(t.cells);this.cells=r,this.bTurnX=t.bTurnX,(s=this.board)==null||s.setCells(this.cells),this.restoreHistoryIndex=e,this.setNextPlayerMessage()}}class f{constructor(){const t=document.querySelector("#app");t&&new m(t)}}new f;
